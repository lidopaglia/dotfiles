"
" -- A Comfy Vimrc ------------------------------------------------------------
" 
syntax on
filetype plugin indent on

let mapleader=" "
let maplocalleader=","

set encoding=utf-8
scriptencoding utf-8

" -- Options ------------------------------------------------------------------

set nocompatible
set number relativenumber
set autoindent smartindent smarttab
set tabstop=4 softtabstop=4 shiftwidth=4 expandtab
set hlsearch incsearch ignorecase smartcase wrapscan
set timeoutlen=400 updatetime=50
set backspace=indent,eol,start
set colorcolumn=80 signcolumn=yes
set mouse=a

if !isdirectory($HOME."/.cache/vim")
    call mkdir($HOME."/.cache/vim", 'p', 0700)
endif

set viminfofile=~/.cache/vim/viminfo

" enable undo if supported 
if has('persistent_undo')
    if !isdirectory($HOME."/.cache/vim/undo")
        call mkdir($HOME."/.cache/vim/undo", 'p', 0700)
    endif
    set undodir=$HOME/.cache/vim/undo
    set undofile
endif
set undolevels=100 nobackup nowritebackup noswapfile

" -- Colorscheme & UI ---------------------------------------------------------

if !empty(globpath(&rtp, "colors/habamax.vim"))
    colorscheme habamax
endif

if (has("termguicolors"))
    let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
    let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
    set termguicolors

    " sets transparent background
    hi Normal guibg=NONE ctermbg=NONE
    " sets transparent signcolumn background
    hi SignColumn guibg=NONE ctermbg=NONE
    " vsplit column transparent background
    hi VertSplit guibg=NONE cterm=NONE
    " make comments italic
    highlight Comment cterm=italic gui=italic
endif


" nicer vsplit border
set fillchars+=vert:\‚ñè

" disable automatic commenting on newline
if has('autocmd')
    autocmd FileType * setlocal formatoptions-=cro
endif

" -- KEYMAPS ------------------------------------------------------------------
"
" better default experience
nnoremap <silent> <space> <nop>
vnoremap <silent> <space> <nop>
nnoremap <silent> Q <nop>

" deal with line wrap
nnoremap <expr> j v:count ? 'j' : 'gj'
nnoremap <expr> k v:count ? 'k' : 'gk'

" move lines up and down
vnoremap J :move '>+1<CR>gv=gv
vnoremap K :move '<-2<CR>gv=gv

" tab indents
xnoremap <Tab> >gv
xnoremap <S-Tab> <gv

" paste over selected text without yanking it
xnoremap <leader>p "_dP

" yank to end of line
nnoremap Y y$

" buffer nav & close
nnoremap <silent> <TAB> :bnext<CR>
nnoremap <silent> <S-TAB> :bprevious<CR>
nnoremap <silent> <leader>q :bd<CR>

" Save file using sudo for files that require it
cabbrev w!! execute 'silent! write !sudo tee % >/dev/null' <bar> edit!


" -- AUTOCMDS -----------------------------------------------------------------

" Create directories when saving files
augroup AutoCreateDir
  autocmd!
  autocmd BufWritePre * call s:CreateDirIfNeeded()
augroup END

function! s:CreateDirIfNeeded()
  let dir = expand('<afile>:p:h')
  if !isdirectory(dir)
    call mkdir(dir, 'p')
  endif
endfunction


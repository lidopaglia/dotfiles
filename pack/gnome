#!/usr/bin/env bash

install_extension() {
    local uuid="$1"
    local major
    local version
    local tmpfile

    major=$(gnome-shell --version | awk '{print $3}' | cut -d. -f1)
    # tmpfile=$(mktemp /tmp/$uuid.zip)
    tmpfile=$(mktemp /tmp/gnome-ext.XXXXXX.zip)

    version=$(wget -qO- "https://extensions.gnome.org/api/v1/extensions/${uuid}/versions?page=1&page_size=100" \
        | jq ".results | map(select(.shell_versions[].major == ${major})) | max_by(.version).version")

    if [[ -z "$version" || "$version" == "null" ]]; then
        echo "No compatible version found for GNOME $major"
        return 1
    fi

    wget -qO "$tmpfile" "https://extensions.gnome.org/api/v1/extensions/$uuid/versions/$version/?format=zip" || {
        echo "Download failed"
        return 1
    }

    echo "Installing $uuid version $version"
    gnome-extensions install --force "$tmpfile"

    rm -f "$tmpfile"
}

find_terminal() {
  for t in ghostty wezterm:org.wezfurlong.wezterm ptyxis; do
    local b f
    b="${t%%:*}"; f="${t#*:}"
    if [[ $b == $f ]]; then
      command -v "$b" >/dev/null && { echo "$b"; return; }
    else
      flatpak info "$f" >/dev/null 2>&1 && { echo "flatpak run $f"; return; }
    fi
  done
}

terminal="$(find_terminal)"
workspaces=9
mod=Alt

echo "Configuring GNOME Settings..."

sudo -v

# swap caps for esc
gsettings set org.gnome.desktop.input-sources xkb-options "['caps:escape']"

# config workspaces
gsettings set "org.gnome.shell.app-switcher" "current-workspace-only" "true"
gsettings set "org.gnome.desktop.wm.preferences" "num-workspaces" "$workspaces"
gsettings set "org.gnome.mutter" "dynamic-workspaces" "false"
gsettings set "org.gnome.mutter" "edge-tiling" "false"
gsettings set "org.gnome.mutter" "workspaces-only-on-primary" "true"

# workspace keybinds
for i in $(seq 1 "$workspaces"); do
    gsettings set "org.gnome.desktop.wm.keybindings" "switch-to-workspace-$i" "['<$mod>$i']"
    gsettings set "org.gnome.desktop.wm.keybindings" "move-to-workspace-$i" "['<Shift><$mod>$i']"
done

# close windows with `mod+shift+c`
gsettings set "org.gnome.desktop.wm.keybindings" "close" "['<Shift><$mod>c']"

# show the overview with `mod+space`
gsettings set "org.gnome.shell.keybindings" "toggle-overview" "['<$mod>space']"

# lock the screen with `mod+l`
gsettings set org.gnome.settings-daemon.plugins.media-keys screensaver "['<$mod>l']"

# setup custom shortcuts
gsettings set org.gnome.settings-daemon.plugins.media-keys custom-keybindings "[
    '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/',
    '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/'
]"

# launch terminal with `mod+return`
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ name "Terminal"
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ command "$terminal"
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ binding "<$mod>Return"

# launch mission-center with `ctrl+shift+esc`
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/ name "Mission Center"
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/ command "flatpak run io.missioncenter.MissionCenter"
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/ binding "<Shift><Control>Escape"

# disable the built-in background logo watermark on fedora
if grep -qi fedora /etc/os-release; then
    gnome-extensions disable background-logo@fedorahosted.org
fi

# disable animations
gsettings set org.gnome.desktop.interface enable-animations false

# enable vrr
gsettings set org.gnome.mutter experimental-features "['variable-refresh-rate']"

# disable hot corners
gsettings set org.gnome.desktop.interface enable-hot-corners false

# set automatic screen blank to 3min
gsettings set org.gnome.desktop.session idle-delay 180

# disable lock screen notifications
gsettings set org.gnome.desktop.notifications show-in-lock-screen false

# disable app search
gsettings set org.gnome.desktop.search-providers disable-external true

# --- laptop specifics --------------------------------------------------------

if [[ $(hostnamectl chassis) == "laptop" ]]; then

    # disable touchpad natural scroll
    gsettings set org.gnome.desktop.peripherals.touchpad natural-scroll false

    # suspend when plugged in after 30min
    gsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-ac-type 'suspend'
    gsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-ac-timeout 1800

    # suspend on battery after 5min
    gsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-battery-type 'suspend'
    gsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-battery-timeout 300

    # enable and configure night light feature
    gsettings set org.gnome.settings-daemon.plugins.color night-light-enabled true
    gsettings set org.gnome.settings-daemon.plugins.color night-light-temperature 4000
    gsettings set org.gnome.settings-daemon.plugins.color night-light-schedule-automatic false
    gsettings set org.gnome.settings-daemon.plugins.color night-light-schedule-from 20.0
    gsettings set org.gnome.settings-daemon.plugins.color night-light-schedule-to 6.0
fi

# -----------------------------------------------------------------------------

echo "Installing GNOME Extensions..."

# install pop-shell (pop-shell@system76.com)
if grep -qi fedora /etc/os-release; then
    sudo dnf install -y gnome-shell-extension-pop-shell xprop
else
    echo "TODO: Install pop-shell extension from source:"
    echo "      https://github.com/pop-os/shell"
    echo
    echo "make (build-essential) and typescript (ts-node) are required."
    echo "Run: `make local-install`"
fi

# enable pop-shell extension & disable stacking with mouse
if gnome-extensions info pop-shell@system76.com >/dev/null 2>&1; then
    gnome-extensions enable pop-shell@system76.com
    gsettings set org.gnome.shell.extensions.pop-shell stacking-with-mouse false
fi

install_extension 'blur-my-shell@aunetx'
install_extension 'caffeine@patapon.info'
install_extension 'Vitals@CoreCoding.com'
install_extension 'drive-menu@gnome-shell-extensions.gcampax.github.com'
install_extension 'just-perfection-desktop@just-perfection'
install_extension 'space-bar@luchrioh'
install_extension 'auto-move-windows@gnome-shell-extensions.gcampax.github.com'

echo -e "Installation complete\n"
echo "Login again or reboot to enable installed extensions"

#set this in justfile
#gnome-extensions enable "$uuid"

#!/usr/bin/bash
#
# sinfo - a simple info script

# get the system make & model. most adhere to using product_name for the model
# text. my limited testing shows that is not the case with Lenovo.
make=$(cat /sys/class/dmi/id/sys_vendor)

case $make in
  "LENOVO")
    model=$(cat /sys/class/dmi/id/product_family);;
  *)
    model=$(cat /sys/class/dmi/id/product_name);;
esac

hostname=$(uname -n)

os=$(awk -F'=' '/PRETTY_NAME/ {gsub(/"/, "", $2); print $2}' /etc/os-release)

kernel=$(uname -sr)

mem=$(free -h --si | awk '/^Mem:/ {print $3 "/" $2}')

cpu=$(lscpu | awk -F": " '/Model name/ { print $2 }')

# Remove un-needed patterns from cpu output. Thanks, neofetch.
cpu="${cpu//(TM)}"
cpu="${cpu//(tm)}"
cpu="${cpu//(R)}"
cpu="${cpu//(r)}"
cpu="${cpu//CPU}"
cpu="${cpu//Processor}"
cpu="${cpu//Dual-Core}"
cpu="${cpu//Quad-Core}"
cpu="${cpu//Six-Core}"
cpu="${cpu//Eight-Core}"
cpu="${cpu//[1-9][0-9]-Core}"
cpu="${cpu//[0-9]-Core}"
cpu="${cpu//, * Compute Cores}"
cpu="${cpu//Core / }"
cpu="${cpu//(\"AuthenticAMD\"*)}"
cpu="${cpu//with Radeon * Graphics}"
cpu="${cpu//, altivec supported}"
cpu="${cpu//FPU*}"
cpu="${cpu//Chip Revision*}"
cpu="${cpu//Technologies, Inc}"
cpu="${cpu//Core2/Core 2}"


# consider first checking distro family,
# then pulling package stats accordingly
#Packages="$(dpkg -l | grep -c ^i)"
#aptlist="$(apt list --upgradable 2>/dev/null)"
#Updates="$(echo $aptlist | sed 's/] /\n/g' | wc -l)"
#Security="$(echo $aptlist | sed 's/] /\n/g' | grep -i -security | wc -l)"

if ! command -v "toilet" 1> /dev/null 2>&1; then
  # just print a simple hostname if
  # toilet is not installed
  name="$hostname"
  # calculate hostname length
  len=$(expr ${#name})
else
  # print hostname using toilet
  name="$(toilet -f pagga $hostname)"
  # account for pagga font's width
  len=$(expr ${#name} / 3)
fi

# print row of hyphens to match total length of $name
bar=$(printf -- '-%.0s' $(seq 1 $len))

# support colors?

# COLORS
#c1="\e[31m" # Red
#c2="\e[32m" # Light Green
#c3="\e[33m" # Yellow
#c4="\e[34m" # Calm Blue
#c5="\e[35m" # Violet
#c6="\e[36m" # Arch Blue
#c7="\e[37m" # White
#c8="\e[38m" # Sky Blue
#c9="\e[39m" # Light Grey
#c10="\e[40m" # Dark Grey
#c20="\e[0m" # Normal
#
## get a random color
#color=$c$(shuf -i 1-7 -n1)
##$c$(shuf -i 1-7 -n1))
#echo $color

echo -e "\e[1m$name\e[0m\n$bar"
echo -e "\e[1mHost:\e[0m $make $model"
echo -e "\e[1mOS:\e[0m $os"
echo -e "\e[1mKernel:\e[0m $kernel"
echo -e "\e[1mUptime:\e[0m$(uptime -p | sed 's/up//')"
echo -e "\e[1mCPU:\e[0m"$cpu""
echo -e "\e[1mRAM:\e[0m $mem"
echo

